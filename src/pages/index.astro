---
import Layout from "../layouts/Layout.astro";
import Card from "../components/Card.astro";
import type { Result as LighthouseResult, FormattedIcu } from "lighthouse";
import type AuditDetails from "lighthouse/types/lhr/audit-details.d.ts";

const reports = await Astro.glob<LighthouseResult>(
  "../../reports/**/report.json"
);

function performance(report: LighthouseResult) {
  return report.categories.performance.score;
}
---

<Layout title="Sidekampen">
  <main>
    <h1>Rangering av ytelsen til nettsidene til konsulentselskaper i Oslo</h1>
    <ul class="link-card-grid">
      {
        reports
          .sort((a, b) => (performance(b) ?? 0) - (performance(a) ?? 0))
          .map((report, i) => (
            <Card
              title={`#${i + 1}: ${report.finalDisplayedUrl ?? ""}`}
              href={report.finalDisplayedUrl}
              body={`Performance: ${performance(report)}`}
              image={
                (
                  report.audits["final-screenshot"]
                    .details as AuditDetails.Screenshot
                ).data
              }
            />
          ))
      }
    </ul>
  </main>
</Layout>

<style>
  main {
    margin: auto;
    padding: 1rem;
    width: 100%;
    padding: 0 1em;
    max-width: calc(100% - 2rem);
    color: white;
    font-size: 20px;
    line-height: 1.6;
  }
  @media screen and (min-width: 800px) {
    main {
      width: calc(800px - 2em);
	  padding: 0;
    }
  }
  h1 {
    font-size: 2rem;
    font-weight: 700;
    line-height: 1;
    text-align: center;
    margin-bottom: 1em;
  }
  .link-card-grid {
    display: grid;
    grid-template-columns: 1fr;
    gap: 2rem;
    padding: 0;
  }
</style>
