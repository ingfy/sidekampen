---
import Layout from "../layouts/Layout.astro";
import Card from "../components/Card.astro";
import Title from "../components/Title.astro";
import type { Result as LighthouseResult } from "lighthouse";
import type AuditDetails from "lighthouse/types/lhr/audit-details.d.ts";
import { normalizeSiteName } from "../normalizeSiteName.ts";

const reports = await Astro.glob<LighthouseResult>(
  "../../reports/**/report.json",
);

function performance(report: LighthouseResult) {
  return report.categories.performance.score;
}
---

<Layout title="Sidekampen">
  <main>
    <Title>
      Rangering av ytelsen til nettsidene til konsulentselskaper i Oslo
    </Title>
    <ul class="link-card-grid">
      {
        reports
          .sort((a, b) => (performance(b) ?? 0) - (performance(a) ?? 0))
          .map((report, i) => {
            const siteName = normalizeSiteName(
              new URL(report.finalDisplayedUrl),
            );
            return (
              <Card
                title={`#${i + 1}: ${siteName ?? ""}`}
                href={`${import.meta.env.BASE_URL}/reports/${siteName}`}
                body={`Performance: ${performance(report)}`}
                image={
                  (
                    report.audits["final-screenshot"]
                      .details as AuditDetails.Screenshot
                  ).data
                }
              />
            );
          })
      }
    </ul>
  </main>
</Layout>

<style>
  main {
    margin: auto;
    padding: 1rem;
    width: 100%;
    padding: 0 1em;
    max-width: calc(100% - 2rem);
    font-size: 20px;
    line-height: 1.6;
  }
  @media screen and (min-width: 800px) {
    main {
      width: calc(800px - 2em);
      padding: 0;
    }
  }
  .link-card-grid {
    display: grid;
    grid-template-columns: 1fr;
    gap: 2rem;
    padding: 0;
  }
</style>
